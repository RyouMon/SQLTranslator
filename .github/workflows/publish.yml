name: Build fbs bins

on:
  push:
    branches: [ main ]

jobs:
  build_deb:
    runs-on: ubuntu-18.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.5.0

      - name: Build deb
        shell: bash
        run: |
          sudo add-apt-repository -y ppa:brightbox/ruby-ng-experimental
          sudo apt update
          sudo apt install -y --no-install-recommends python3-dev python3-venv pyqt5-dev squashfs-tools fcitx-frontend-qt5 rubygems ruby2.7 ruby2.7-dev libruby2.7 ruby-xmlrpc
          sudo gem install fpm
          python3 -m venv fbs
          source fbs/bin/activate
          pip3 install pip -U
          pip3 install -r requirements.txt
          fbs freeze
          cp /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so target/SQLTranslator/PyQt5/Qt/plugins/platforminputcontexts
          sudo chmod +x target/SQLTranslator/PyQt5/Qt/plugins/platforminputcontexts/*.so
          fbs installer

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: SQLTranslator.deb
          path: target/SQLTranslator.deb

  build_dmg:
    runs-on: macos-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.5.0

      - name: Build dmg
        shell: bash
        run: |
          sudo conda create -n fbs python=3.6 -y -q
          eval "$(conda shell.bash hook)"
          conda activate fbs
          sudo pip3 install pip -U
          sudo pip3 install -r requirements.txt
          fbs freeze
          fbs installer

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: SQLTranslator.dmg
          path: target/SQLTranslator.dmg

  build_exe:
    runs-on: windows-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2.5.0

      - uses: actions/setup-python@v2
        with:
          python-version: "3.6.x"

      - name: Build exe
        shell: powershell
        run: |
          pip3 install pip -U
          pip3 install -r requirements.txt
          fbs freeze
          fbs installer

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: SQLTranslatorSetup.exe
          path: .\target\SQLTranslatorSetup.exe

  publish:
    runs-on: ubuntu-latest
    needs: [ build_deb, build_dmg, build_exe ]
    steps:
      - name: Download deb
        uses: actions/download-artifact@v3.0.1
        with:
          name: SQLTranslator.deb
          path: /tmp

      - name: Download dmg
        uses: actions/download-artifact@v3.0.1
        with:
          name: SQLTranslator.dmg
          path: /tmp

      - name: Download exe
        uses: actions/download-artifact@v3.0.1
        with:
          name: SQLTranslatorSetup.exe
          path: /tmp

      - name: Delete Artifact
        # You may pin to the exact commit or the version.
        # uses: GeekyEggo/delete-artifact@b73cb986740e466292a536d0e32e2666c56fdeb3
        uses: GeekyEggo/delete-artifact@v2.0.0
        with:
          name: |
            SQLTranslator.deb
            SQLTranslator.dmg
            SQLTranslatorSetup.exe

      - name: Generate Prerelease Release Notes
        run: |
          zip /tmp/SQLTranslatorSetup_for_Windows.exe.zip /tmp/SQLTranslatorSetup.exe && rm /tmp/SQLTranslatorSetup.exe || ls /tmp
          mv /tmp/SQLTranslator.dmg /tmp/SQLTranslator_for_macOS.dmg
          mv /tmp/SQLTranslator.deb /tmp/SQLTranslator_for_Ubuntu.deb
          echo '### SQLTranslator`latest`' >> ReleaseNotes.md
          echo '> Written by @ferstar with love.' >> ReleaseNotes.md
          echo '> Generated by Github Actions.' >> ReleaseNotes.md

      - name: Publish GitHub Release
        uses: ncipollo/release-action@v1.11.2
        with:
          bodyFile: ReleaseNotes.md
          artifacts: "/tmp/SQLTranslator*.*"
          tag: "v1.0.0"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
